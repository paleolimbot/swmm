// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// timesTwo
NumericVector timesTwo(NumericVector x);
RcppExport SEXP _swmmbin_timesTwo(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(timesTwo(x));
    return rcpp_result_gen;
END_RCPP
}
// swmmVersion
IntegerVector swmmVersion();
RcppExport SEXP _swmmbin_swmmVersion() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(swmmVersion());
    return rcpp_result_gen;
END_RCPP
}
// swmmRun
List swmmRun(String inputFileIn, String reportFileIn, String binaryFileIn);
RcppExport SEXP _swmmbin_swmmRun(SEXP inputFileInSEXP, SEXP reportFileInSEXP, SEXP binaryFileInSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type inputFileIn(inputFileInSEXP);
    Rcpp::traits::input_parameter< String >::type reportFileIn(reportFileInSEXP);
    Rcpp::traits::input_parameter< String >::type binaryFileIn(binaryFileInSEXP);
    rcpp_result_gen = Rcpp::wrap(swmmRun(inputFileIn, reportFileIn, binaryFileIn));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_swmmbin_timesTwo", (DL_FUNC) &_swmmbin_timesTwo, 1},
    {"_swmmbin_swmmVersion", (DL_FUNC) &_swmmbin_swmmVersion, 0},
    {"_swmmbin_swmmRun", (DL_FUNC) &_swmmbin_swmmRun, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_swmmbin(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
